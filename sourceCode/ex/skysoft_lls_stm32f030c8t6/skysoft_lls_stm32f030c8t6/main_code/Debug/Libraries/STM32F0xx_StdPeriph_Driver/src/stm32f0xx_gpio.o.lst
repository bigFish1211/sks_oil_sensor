   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_gpio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GPIO_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	GPIO_DeInit
  20              		.code	16
  21              		.thumb_func
  23              	GPIO_DeInit:
  24              	.LFB33:
  25              		.file 1 "../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c"
   1:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
   2:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   ******************************************************************************
   3:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @file    stm32f0xx_gpio.c
   4:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @version V1.5.0
   6:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @date    05-December-2014
   7:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *          functionalities of the GPIO peripheral:
   9:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *           + Initialization and Configuration functions
  10:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *           + GPIO Read and Write functions
  11:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *           + GPIO Alternate functions configuration functions
  12:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  13:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *  @verbatim
  14:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  15:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  16:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     ===========================================================================
  17:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                          ##### How to use this driver #####
  18:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     ===========================================================================
  19:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       [..]
  20:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) Enable the GPIO AHB clock using RCC_AHBPeriphClockCmd()
  21:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) Configure the GPIO pin(s) using GPIO_Init()
  22:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           Four possible configuration are available for each pin:
  23:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****          (++) Input: Floating, Pull-up, Pull-down.
  24:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****          (++) Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                       Open Drain (Pull-up, Pull-down or no Pull).
  26:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               In output mode, the speed is configurable: Low, Medium, Fast or High.
  27:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****          (++) Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  28:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                                   Open Drain (Pull-up, Pull-down or no Pull).
  29:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****          (++) Analog: required mode when a pin is to be used as ADC channel,
  30:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               DAC output or comparator input.
  31:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) Peripherals alternate function:
  32:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****          (++) For ADC, DAC and comparators, configure the desired pin in analog 
  33:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               mode using GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN
  34:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****          (++) For other peripherals (TIM, USART...):
  35:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               (+++) Connect the pin to the desired peripherals' Alternate 
  36:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                     Function (AF) using GPIO_PinAFConfig() function. For PortC, 
  37:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                     PortD and PortF, no configuration is needed.
  38:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               (+++) Configure the desired pin in alternate function mode using
  39:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                     GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  40:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               (+++) Select the type, pull-up/pull-down and output speed via 
  41:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                     GPIO_PuPd, GPIO_OType and GPIO_Speed members
  42:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****               (+++) Call GPIO_Init() function
  43:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  44:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) To set/reset the level of a pin configured in output mode use
  45:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           GPIO_SetBits()/GPIO_ResetBits()
  46:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) During and just after reset, the alternate functions are not active and 
  47:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           the GPIO pins are configured in input floating mode (except JTAG pins).
  48:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  49:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           general-purpose (PC14 and PC15, respectively) when the LSE oscillator 
  50:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           is off. The LSE has priority over the GPIO function.
  51:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as general-purpose 
  52:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           PD0 and PD1, respectively, when the HSE oscillator is off. The HSE has 
  53:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           priority over the GPIO function.
  54:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     @endverbatim
  55:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   ******************************************************************************
  56:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @attention
  57:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  58:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  59:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  60:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  61:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * You may not use this file except in compliance with the License.
  62:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * You may obtain a copy of the License at:
  63:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  64:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  65:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  66:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * Unless required by applicable law or agreed to in writing, software 
  67:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  68:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  69:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * See the License for the specific language governing permissions and
  70:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * limitations under the License.
  71:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *
  72:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   ******************************************************************************
  73:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
  74:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
  75:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  76:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** #include "stm32f0xx_gpio.h"
  77:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** #include "stm32f0xx_rcc.h"
  78:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
  79:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
  80:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @{
  81:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
  82:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
  83:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /** @defgroup GPIO 
  84:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief GPIO driver modules
  85:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @{
  86:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
  87:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
  88:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  89:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  90:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  91:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  92:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  93:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  94:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
  95:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /** @defgroup GPIO_Private_Functions 
  96:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @{
  97:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
  98:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
  99:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 100:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  *  @brief   Initialization and Configuration
 101:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  *
 102:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** @verbatim
 103:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  ===============================================================================
 104:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                     ##### Initialization and Configuration #####
 105:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  ===============================================================================
 106:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 107:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** @endverbatim
 108:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @{
 109:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 110:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 111:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 112:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset 
 113:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         values.
 114:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 115:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 116:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.    
 117:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 118:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 119:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 120:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
  26              		.loc 1 120 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
  33              	.LVL0:
 121:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 122:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 123:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 124:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   if(GPIOx == GPIOA)
  34              		.loc 1 124 0
  35 0002 9021     		mov	r1, #144
  36 0004 CB05     		lsl	r3, r1, #23
  37 0006 9842     		cmp	r0, r3
  38 0008 07D1     		bne	.L2
 125:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 126:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  39              		.loc 1 126 0
  40 000a 8022     		mov	r2, #128
  41 000c 9002     		lsl	r0, r2, #10
  42              	.LVL1:
  43 000e 0121     		mov	r1, #1
  44 0010 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 127:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOA, DISABLE);
  45              		.loc 1 127 0
  46 0014 8020     		mov	r0, #128
  47 0016 8002     		lsl	r0, r0, #10
  48 0018 35E0     		b	.L8
  49              	.LVL2:
  50              	.L2:
 128:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 129:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else if(GPIOx == GPIOB)
  51              		.loc 1 129 0
  52 001a 1D4B     		ldr	r3, .L9
  53 001c 9842     		cmp	r0, r3
  54 001e 07D1     		bne	.L4
 130:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 131:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOB, ENABLE);
  55              		.loc 1 131 0
  56 0020 8020     		mov	r0, #128
  57              	.LVL3:
  58 0022 C002     		lsl	r0, r0, #11
  59 0024 0121     		mov	r1, #1
  60 0026 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 132:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOB, DISABLE);
  61              		.loc 1 132 0
  62 002a 8021     		mov	r1, #128
  63 002c C802     		lsl	r0, r1, #11
  64 002e 2AE0     		b	.L8
  65              	.LVL4:
  66              	.L4:
 133:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 134:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else if(GPIOx == GPIOC)
  67              		.loc 1 134 0
  68 0030 184A     		ldr	r2, .L9+4
  69 0032 9042     		cmp	r0, r2
  70 0034 07D1     		bne	.L5
 135:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 136:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOC, ENABLE);
  71              		.loc 1 136 0
  72 0036 8021     		mov	r1, #128
  73 0038 0803     		lsl	r0, r1, #12
  74              	.LVL5:
  75 003a 0121     		mov	r1, #1
  76 003c FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 137:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOC, DISABLE);
  77              		.loc 1 137 0
  78 0040 8023     		mov	r3, #128
  79 0042 1803     		lsl	r0, r3, #12
  80 0044 1FE0     		b	.L8
  81              	.LVL6:
  82              	.L5:
 138:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 139:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else if(GPIOx == GPIOD)
  83              		.loc 1 139 0
  84 0046 144A     		ldr	r2, .L9+8
  85 0048 9042     		cmp	r0, r2
  86 004a 07D1     		bne	.L6
 140:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 141:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOD, ENABLE);
  87              		.loc 1 141 0
  88 004c 8023     		mov	r3, #128
  89 004e 5803     		lsl	r0, r3, #13
  90              	.LVL7:
  91 0050 0121     		mov	r1, #1
  92 0052 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 142:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOD, DISABLE);
  93              		.loc 1 142 0
  94 0056 8020     		mov	r0, #128
  95 0058 4003     		lsl	r0, r0, #13
  96 005a 14E0     		b	.L8
  97              	.LVL8:
  98              	.L6:
 143:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 144:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else if(GPIOx == GPIOE)
  99              		.loc 1 144 0
 100 005c 0F49     		ldr	r1, .L9+12
 101 005e 8842     		cmp	r0, r1
 102 0060 07D1     		bne	.L7
 145:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 146:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOE, ENABLE);
 103              		.loc 1 146 0
 104 0062 8020     		mov	r0, #128
 105              	.LVL9:
 106 0064 8003     		lsl	r0, r0, #14
 107 0066 0121     		mov	r1, #1
 108 0068 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 147:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOE, DISABLE);
 109              		.loc 1 147 0
 110 006c 8022     		mov	r2, #128
 111 006e 9003     		lsl	r0, r2, #14
 112 0070 09E0     		b	.L8
 113              	.LVL10:
 114              	.L7:
 148:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 149:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else
 150:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 151:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     if(GPIOx == GPIOF)
 115              		.loc 1 151 0
 116 0072 0B4B     		ldr	r3, .L9+16
 117 0074 9842     		cmp	r0, r3
 118 0076 09D1     		bne	.L1
 152:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     {
 153:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOF, ENABLE);
 119              		.loc 1 153 0
 120 0078 8022     		mov	r2, #128
 121 007a D003     		lsl	r0, r2, #15
 122              	.LVL11:
 123 007c 0121     		mov	r1, #1
 124 007e FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 154:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOF, DISABLE);
 125              		.loc 1 154 0
 126 0082 8021     		mov	r1, #128
 127 0084 C803     		lsl	r0, r1, #15
 128              	.L8:
 129 0086 0021     		mov	r1, #0
 130 0088 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 131              	.L1:
 132              		@ sp needed for prologue
 155:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     }
 156:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 157:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 133              		.loc 1 157 0
 134 008c 08BD     		pop	{r3, pc}
 135              	.L10:
 136 008e C046     		.align	2
 137              	.L9:
 138 0090 00040048 		.word	1207960576
 139 0094 00080048 		.word	1207961600
 140 0098 000C0048 		.word	1207962624
 141 009c 00100048 		.word	1207963648
 142 00a0 00140048 		.word	1207964672
 143              		.cfi_endproc
 144              	.LFE33:
 146              		.section	.text.GPIO_Init,"ax",%progbits
 147              		.align	1
 148              		.global	GPIO_Init
 149              		.code	16
 150              		.thumb_func
 152              	GPIO_Init:
 153              	.LFB34:
 158:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 159:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 160:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified 
 161:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         parameters in the GPIO_InitStruct.
 162:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 163:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 164:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.   
 165:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 166:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 167:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 168:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 169:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 170:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 154              		.loc 1 170 0
 155              		.cfi_startproc
 156 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 32
 159              		.cfi_offset 0, -32
 160              		.cfi_offset 1, -28
 161              		.cfi_offset 2, -24
 162              		.cfi_offset 4, -20
 163              		.cfi_offset 5, -16
 164              		.cfi_offset 6, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167              	.LVL12:
 171:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 172:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 173:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 174:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 175:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 176:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 177:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 178:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 179:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /*-------------------------- Configure the port pins -----------------------*/
 180:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 181:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 182:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 183:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 184:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 185:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     /* Get the port pins position */
 186:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 168              		.loc 1 186 0
 169 0002 0B68     		ldr	r3, [r1]
 170 0004 0193     		str	r3, [sp, #4]
 171 0006 0023     		mov	r3, #0
 181:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 172              		.loc 1 181 0
 173 0008 1A1C     		mov	r2, r3
 174              	.LVL13:
 175              	.L14:
 183:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 176              		.loc 1 183 0
 177 000a 0125     		mov	r5, #1
 178              		.loc 1 186 0
 179 000c 019C     		ldr	r4, [sp, #4]
 183:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 180              		.loc 1 183 0
 181 000e 9540     		lsl	r5, r5, r2
 182              	.LVL14:
 183              		.loc 1 186 0
 184 0010 2C40     		and	r4, r5
 185              	.LVL15:
 187:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 188:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     if (currentpin == pos)
 186              		.loc 1 188 0
 187 0012 AC42     		cmp	r4, r5
 188 0014 27D1     		bne	.L12
 189:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     {
 190:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 189              		.loc 1 190 0
 190 0016 0D79     		ldrb	r5, [r1, #4]
 191              	.LVL16:
 192 0018 6F1E     		sub	r7, r5, #1
 193 001a 012F     		cmp	r7, #1
 194 001c 11D8     		bhi	.L13
 191:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       {
 192:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         /* Check Speed mode parameters */
 193:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 194:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 195:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         /* Speed mode configuration */
 196:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 195              		.loc 1 196 0
 196 001e 8768     		ldr	r7, [r0, #8]
 197 0020 0326     		mov	r6, #3
 198 0022 9E40     		lsl	r6, r6, r3
 199 0024 B743     		bic	r7, r6
 200 0026 8760     		str	r7, [r0, #8]
 197:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 201              		.loc 1 197 0
 202 0028 4E79     		ldrb	r6, [r1, #5]
 203 002a 8768     		ldr	r7, [r0, #8]
 204 002c 9E40     		lsl	r6, r6, r3
 205 002e 3743     		orr	r7, r6
 206 0030 8760     		str	r7, [r0, #8]
 198:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 199:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         /* Check Output mode parameters */
 200:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 201:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 202:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         /* Output mode configuration */
 203:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         GPIOx->OTYPER &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos));
 207              		.loc 1 203 0
 208 0032 8688     		ldrh	r6, [r0, #4]
 209 0034 A643     		bic	r6, r4
 210 0036 8680     		strh	r6, [r0, #4]
 204:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 211              		.loc 1 204 0
 212 0038 8C79     		ldrb	r4, [r1, #6]
 213              	.LVL17:
 214 003a 8688     		ldrh	r6, [r0, #4]
 215 003c 9440     		lsl	r4, r4, r2
 216 003e 3443     		orr	r4, r6
 217 0040 8480     		strh	r4, [r0, #4]
 218              	.L13:
 205:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       }
 206:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 207:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 219              		.loc 1 207 0
 220 0042 0326     		mov	r6, #3
 221 0044 0768     		ldr	r7, [r0]
 222 0046 9E40     		lsl	r6, r6, r3
 223 0048 F643     		mvn	r6, r6
 224 004a 3740     		and	r7, r6
 225 004c 0760     		str	r7, [r0]
 208:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 209:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 226              		.loc 1 209 0
 227 004e 0468     		ldr	r4, [r0]
 228 0050 9D40     		lsl	r5, r5, r3
 229 0052 2543     		orr	r5, r4
 230 0054 0560     		str	r5, [r0]
 210:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 211:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       /* Pull-up Pull down resistor configuration */
 212:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 231              		.loc 1 212 0
 232 0056 C768     		ldr	r7, [r0, #12]
 233 0058 3E40     		and	r6, r7
 234 005a C660     		str	r6, [r0, #12]
 213:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 235              		.loc 1 213 0
 236 005c CC79     		ldrb	r4, [r1, #7]
 237 005e C568     		ldr	r5, [r0, #12]
 238 0060 9C40     		lsl	r4, r4, r3
 239 0062 2C43     		orr	r4, r5
 240 0064 C460     		str	r4, [r0, #12]
 241              	.L12:
 181:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 242              		.loc 1 181 0
 243 0066 0132     		add	r2, r2, #1
 244              	.LVL18:
 245 0068 0233     		add	r3, r3, #2
 246 006a 102A     		cmp	r2, #16
 247 006c CDD1     		bne	.L14
 248              		@ sp needed for prologue
 214:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     }
 215:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 216:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 249              		.loc 1 216 0
 250 006e F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 251              		.cfi_endproc
 252              	.LFE34:
 254              		.section	.text.GPIO_StructInit,"ax",%progbits
 255              		.align	1
 256              		.global	GPIO_StructInit
 257              		.code	16
 258              		.thumb_func
 260              	GPIO_StructInit:
 261              	.LFB35:
 217:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 218:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 219:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 220:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure which will 
 221:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         be initialized.
 222:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 223:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 224:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 225:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 262              		.loc 1 225 0
 263              		.cfi_startproc
 264              	.LVL19:
 226:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 227:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 265              		.loc 1 227 0
 266 0000 0449     		ldr	r1, .L17
 228:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 267              		.loc 1 228 0
 268 0002 0023     		mov	r3, #0
 229:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_Level_2;
 269              		.loc 1 229 0
 270 0004 0122     		mov	r2, #1
 227:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 271              		.loc 1 227 0
 272 0006 0160     		str	r1, [r0]
 228:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 273              		.loc 1 228 0
 274 0008 0371     		strb	r3, [r0, #4]
 275              		.loc 1 229 0
 276 000a 4271     		strb	r2, [r0, #5]
 230:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 277              		.loc 1 230 0
 278 000c 8371     		strb	r3, [r0, #6]
 231:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 279              		.loc 1 231 0
 280 000e C371     		strb	r3, [r0, #7]
 281              		@ sp needed for prologue
 232:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 282              		.loc 1 232 0
 283 0010 7047     		bx	lr
 284              	.L18:
 285 0012 C046     		.align	2
 286              	.L17:
 287 0014 FFFF0000 		.word	65535
 288              		.cfi_endproc
 289              	.LFE35:
 291              		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 292              		.align	1
 293              		.global	GPIO_PinLockConfig
 294              		.code	16
 295              		.thumb_func
 297              	GPIO_PinLockConfig:
 298              	.LFB36:
 233:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 234:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 235:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 236:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 237:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 238:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 239:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         until the next device reset.
 240:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A or B) to select the GPIO peripheral.
 241:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 242:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 243:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 244:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 245:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 246:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 299              		.loc 1 246 0
 300              		.cfi_startproc
 301              	.LVL20:
 247:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 302              		.loc 1 247 0
 303 0000 8022     		mov	r2, #128
 246:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 304              		.loc 1 246 0
 305 0002 82B0     		sub	sp, sp, #8
 306              	.LCFI2:
 307              		.cfi_def_cfa_offset 8
 308              		.loc 1 247 0
 309 0004 5302     		lsl	r3, r2, #9
 310 0006 0193     		str	r3, [sp, #4]
 311              	.LVL21:
 248:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 249:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 250:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_LIST_PERIPH(GPIOx));
 251:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 252:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 253:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   tmp |= GPIO_Pin;
 312              		.loc 1 253 0
 313 0008 019A     		ldr	r2, [sp, #4]
 314 000a 0A43     		orr	r2, r1
 315              	.LVL22:
 316 000c 0192     		str	r2, [sp, #4]
 317              	.LVL23:
 254:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Set LCKK bit */
 255:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->LCKR = tmp;
 318              		.loc 1 255 0
 319 000e 019B     		ldr	r3, [sp, #4]
 320 0010 C361     		str	r3, [r0, #28]
 256:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Reset LCKK bit */
 257:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 321              		.loc 1 257 0
 322 0012 C161     		str	r1, [r0, #28]
 258:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Set LCKK bit */
 259:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->LCKR = tmp;
 323              		.loc 1 259 0
 324 0014 019A     		ldr	r2, [sp, #4]
 325              	.LVL24:
 326 0016 C261     		str	r2, [r0, #28]
 260:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Read LCKK bit */
 261:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   tmp = GPIOx->LCKR;
 327              		.loc 1 261 0
 328 0018 C169     		ldr	r1, [r0, #28]
 329              	.LVL25:
 330 001a 0191     		str	r1, [sp, #4]
 262:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Read LCKK bit */
 263:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   tmp = GPIOx->LCKR;
 331              		.loc 1 263 0
 332 001c C369     		ldr	r3, [r0, #28]
 333              	.LVL26:
 334 001e 0193     		str	r3, [sp, #4]
 264:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 335              		.loc 1 264 0
 336 0020 02B0     		add	sp, sp, #8
 337              		@ sp needed for prologue
 338 0022 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE36:
 342              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 343              		.align	1
 344              		.global	GPIO_ReadInputDataBit
 345              		.code	16
 346              		.thumb_func
 348              	GPIO_ReadInputDataBit:
 349              	.LFB37:
 265:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 266:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 267:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @}
 268:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 269:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 270:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 271:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  *  @brief   GPIO Read and Write
 272:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  *
 273:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** @verbatim   
 274:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  ===============================================================================
 275:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****                       ##### GPIO Read and Write #####
 276:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  ===============================================================================  
 277:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 278:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** @endverbatim
 279:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @{
 280:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 281:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 282:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 283:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Reads the specified input port pin.
 284:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 285:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 286:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.   
 287:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 288:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be:
 289:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F051 and STM32F030: (0..15) for GPIOA, GPIOB, GPIOC, (2) for GPIOD and (0..1, 
 290:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F072: (0..15) for GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, (0..10) for GPIOF.
 291:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F031: (0..15) for GPIOA, GPIOB, (13..15) for GPIOC and (0..1, 6..7) for GPIOF.
 292:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval The input port pin value.
 293:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 294:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 295:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 350              		.loc 1 295 0
 351              		.cfi_startproc
 352              	.LVL27:
 296:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   uint8_t bitstatus = 0x00;
 297:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 298:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 299:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 300:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 301:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 302:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 353              		.loc 1 302 0
 354 0000 008A     		ldrh	r0, [r0, #16]
 355              	.LVL28:
 356              		@ sp needed for prologue
 303:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 304:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 357              		.loc 1 304 0
 358 0002 0840     		and	r0, r1
 359              	.LVL29:
 305:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 306:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else
 307:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 308:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 309:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 310:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   return bitstatus;
 360              		.loc 1 310 0
 361 0004 431E     		sub	r3, r0, #1
 362 0006 9841     		sbc	r0, r0, r3
 311:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 363              		.loc 1 311 0
 364 0008 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE37:
 368              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 369              		.align	1
 370              		.global	GPIO_ReadInputData
 371              		.code	16
 372              		.thumb_func
 374              	GPIO_ReadInputData:
 375              	.LFB38:
 312:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 313:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 314:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Reads the specified input port pin.
 315:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 316:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 317:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.   
 318:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval The input port pin value.
 319:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 320:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 321:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 376              		.loc 1 321 0
 377              		.cfi_startproc
 378              	.LVL30:
 322:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 323:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 324:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 325:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 379              		.loc 1 325 0
 380 0000 008A     		ldrh	r0, [r0, #16]
 381              	.LVL31:
 382              		@ sp needed for prologue
 326:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 383              		.loc 1 326 0
 384 0002 7047     		bx	lr
 385              		.cfi_endproc
 386              	.LFE38:
 388              		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 389              		.align	1
 390              		.global	GPIO_ReadOutputDataBit
 391              		.code	16
 392              		.thumb_func
 394              	GPIO_ReadOutputDataBit:
 395              	.LFB39:
 327:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 328:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 329:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 330:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 331:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 332:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.   
 333:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_Pin: Specifies the port bit to read.
 334:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be:
 335:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F051 and STM32F030: (0..15) for GPIOA, GPIOB, GPIOC, (2) for GPIOD and (0..1, 
 336:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F072: (0..15) for GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, (0..10) for GPIOF.
 337:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F031: (0..15) for GPIOA, GPIOB, (13..15) for GPIOC and (0..1, 6..7) for GPIOF.
 338:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval The output port pin value.
 339:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 340:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 341:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 396              		.loc 1 341 0
 397              		.cfi_startproc
 398              	.LVL32:
 342:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   uint8_t bitstatus = 0x00;
 343:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 344:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 345:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 346:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 347:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 348:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 399              		.loc 1 348 0
 400 0000 808A     		ldrh	r0, [r0, #20]
 401              	.LVL33:
 402              		@ sp needed for prologue
 349:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 350:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 403              		.loc 1 350 0
 404 0002 0840     		and	r0, r1
 405              	.LVL34:
 351:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 352:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else
 353:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 354:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 355:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 356:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   return bitstatus;
 406              		.loc 1 356 0
 407 0004 431E     		sub	r3, r0, #1
 408 0006 9841     		sbc	r0, r0, r3
 357:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 409              		.loc 1 357 0
 410 0008 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE39:
 414              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 415              		.align	1
 416              		.global	GPIO_ReadOutputData
 417              		.code	16
 418              		.thumb_func
 420              	GPIO_ReadOutputData:
 421              	.LFB40:
 358:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 359:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 360:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 361:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 362:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 363:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.    
 364:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval GPIO output data port value.
 365:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 366:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 367:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 422              		.loc 1 367 0
 423              		.cfi_startproc
 424              	.LVL35:
 368:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 369:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 370:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 371:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 425              		.loc 1 371 0
 426 0000 808A     		ldrh	r0, [r0, #20]
 427              	.LVL36:
 428              		@ sp needed for prologue
 372:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 429              		.loc 1 372 0
 430 0002 7047     		bx	lr
 431              		.cfi_endproc
 432              	.LFE40:
 434              		.section	.text.GPIO_SetBits,"ax",%progbits
 435              		.align	1
 436              		.global	GPIO_SetBits
 437              		.code	16
 438              		.thumb_func
 440              	GPIO_SetBits:
 441              	.LFB41:
 373:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 374:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 375:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Sets the selected data port bits.
 376:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 377:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 378:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.    
 379:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 380:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be:
 381:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F051 and STM32F030: (0..15) for GPIOA, GPIOB, GPIOC, (2) for GPIOD and (0..1, 
 382:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F072: (0..15) for GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, (0..10) for GPIOF.
 383:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F031: (0..15) for GPIOA, GPIOB, (13..15) for GPIOC and (0..1, 6..7) for GPIOF.
 384:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 385:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 386:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 387:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 442              		.loc 1 387 0
 443              		.cfi_startproc
 444              	.LVL37:
 388:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 389:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 390:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 391:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 392:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->BSRR = GPIO_Pin;
 445              		.loc 1 392 0
 446 0000 8161     		str	r1, [r0, #24]
 447              		@ sp needed for prologue
 393:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 448              		.loc 1 393 0
 449 0002 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE41:
 453              		.section	.text.GPIO_ResetBits,"ax",%progbits
 454              		.align	1
 455              		.global	GPIO_ResetBits
 456              		.code	16
 457              		.thumb_func
 459              	GPIO_ResetBits:
 460              	.LFB42:
 394:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 395:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 396:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Clears the selected data port bits.
 397:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 398:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 399:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.
 400:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 401:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be:
 402:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F051 and STM32F030: (0..15) for GPIOA, GPIOB, GPIOC, (2) for GPIOD and (0..1, 
 403:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F072: (0..15) for GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, (0..10) for GPIOF.
 404:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F031: (0..15) for GPIOA, GPIOB, (13..15) for GPIOC and (0..1, 6..7) for GPIOF.
 405:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 406:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 407:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 408:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 461              		.loc 1 408 0
 462              		.cfi_startproc
 463              	.LVL38:
 409:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 410:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 411:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 412:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 413:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->BRR = GPIO_Pin;
 464              		.loc 1 413 0
 465 0000 0185     		strh	r1, [r0, #40]
 466              		@ sp needed for prologue
 414:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 467              		.loc 1 414 0
 468 0002 7047     		bx	lr
 469              		.cfi_endproc
 470              	.LFE42:
 472              		.section	.text.GPIO_WriteBit,"ax",%progbits
 473              		.align	1
 474              		.global	GPIO_WriteBit
 475              		.code	16
 476              		.thumb_func
 478              	GPIO_WriteBit:
 479              	.LFB43:
 415:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 416:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 417:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 418:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 419:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 420:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.  
 421:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 422:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 423:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *          This parameter can be one of the BitAction enumeration values:
 424:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 425:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 426:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be:
 427:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F051 and STM32F030: (0..15) for GPIOA, GPIOB, GPIOC, (2) for GPIOD and (0..1, 
 428:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F072: (0..15) for GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, (0..10) for GPIOF.
 429:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         For STM32F031: (0..15) for GPIOA, GPIOB, (13..15) for GPIOC and (0..1, 6..7) for GPIOF.
 430:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 431:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 432:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 433:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 480              		.loc 1 433 0
 481              		.cfi_startproc
 482 0000 00B5     		push	{lr}
 483              	.LCFI3:
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 14, -4
 486              	.LVL39:
 434:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 435:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 436:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 437:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 438:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 439:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   if (BitVal != Bit_RESET)
 487              		.loc 1 439 0
 488 0002 002A     		cmp	r2, #0
 489 0004 01D0     		beq	.L27
 440:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 441:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 490              		.loc 1 441 0
 491 0006 8161     		str	r1, [r0, #24]
 492 0008 00E0     		b	.L26
 493              	.L27:
 442:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 443:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   else
 444:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   {
 445:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****     GPIOx->BRR = GPIO_Pin ;
 494              		.loc 1 445 0
 495 000a 0185     		strh	r1, [r0, #40]
 496              	.L26:
 497              		@ sp needed for prologue
 446:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   }
 447:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 498              		.loc 1 447 0
 499 000c 00BD     		pop	{pc}
 500              		.cfi_endproc
 501              	.LFE43:
 503              		.section	.text.GPIO_Write,"ax",%progbits
 504              		.align	1
 505              		.global	GPIO_Write
 506              		.code	16
 507              		.thumb_func
 509              	GPIO_Write:
 510              	.LFB44:
 448:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 449:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 450:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 451:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 452:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOE is available only for STM32F072.
 453:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOD is not available for STM32F031.  
 454:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 455:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 456:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 457:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 458:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 511              		.loc 1 458 0
 512              		.cfi_startproc
 513              	.LVL40:
 459:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 460:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 461:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 462:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->ODR = PortVal;
 514              		.loc 1 462 0
 515 0000 8182     		strh	r1, [r0, #20]
 516              		@ sp needed for prologue
 463:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 517              		.loc 1 463 0
 518 0002 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE44:
 522              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 523              		.align	1
 524              		.global	GPIO_PinAFConfig
 525              		.code	16
 526              		.thumb_func
 528              	GPIO_PinAFConfig:
 529              	.LFB45:
 464:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 465:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 466:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @}
 467:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 468:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 469:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration functions
 470:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration functions
 471:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  *
 472:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** @verbatim   
 473:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  ===============================================================================
 474:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****           ##### GPIO Alternate functions configuration functions #####
 475:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****  ===============================================================================  
 476:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 477:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** @endverbatim
 478:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @{
 479:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 480:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 481:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** /**
 482:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 483:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 484:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   GPIOC, GPIOD, GPIOE and GPIOF  are available only for STM32F072 and STM32F091. 
 485:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 486:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *          This parameter can be GPIO_PinSourcex where x can be (0..15) for GPIOA, GPIOB, GPIOD, 
 487:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *          and (0..12) for GPIOC and (0, 2..5, 9..10) for GPIOF.    
 488:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @param  GPIO_AF: selects the pin to used as Alternate function.
 489:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *          This parameter can be one of the following value:
 490:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_0:  WKUP, EVENTOUT, TIM15, SPI1, TIM17, MCO, SWDAT, SWCLK,
 491:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *                             TIM14, BOOT, USART1, CEC, IR_OUT, SPI2, TIM3, USART4,
 492:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *                             CAN, USART2, CRS, TIM16, TIM1, TS, USART8 
 493:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_1: USART2, CEC, TIM3, USART1, USART2, EVENTOUT, I2C1,
 494:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *                            I2C2, TIM15, SPI2, USART3, TS, SPI1, USART7, USART8
 495:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *                            USART5, USART4, USART6, I2C1   
 496:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_2: TIM2, TIM1, EVENTOUT, TIM16, TIM17, USB, USART6, USART5,
 497:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *                            USART8, USART7, USART6  
 498:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_3: TS, I2C1, TIM15, EVENTOUT 
 499:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_4: TIM14, USART4, USART3, CRS, CAN, I2C1, USART5
 500:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_5: TIM16, TIM17, TIM15, SPI2, I2C2, USART6, MCO
 501:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_6: EVENTOUT
 502:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *            @arg GPIO_AF_7: COMP1 OUT, COMP2 OUT 
 503:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   The pin should already been configured in Alternate Function mode(AF)
 504:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         using GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
 505:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @note   Refer to the Alternate function mapping table in the device datasheet 
 506:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         for the detailed mapping of the system and peripherals'alternate 
 507:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   *         function I/O pins.
 508:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   * @retval None
 509:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   */
 510:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 511:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** {
 530              		.loc 1 511 0
 531              		.cfi_startproc
 532 0000 30B5     		push	{r4, r5, lr}
 533              	.LCFI4:
 534              		.cfi_def_cfa_offset 12
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538              	.LVL41:
 512:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   uint32_t temp = 0x00;
 513:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   uint32_t temp_2 = 0x00;
 514:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 515:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   /* Check the parameters */
 516:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 517:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 518:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 519:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** 
 520:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4));
 539              		.loc 1 520 0
 540 0002 0723     		mov	r3, #7
 541 0004 0B40     		and	r3, r1
 521:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 542              		.loc 1 521 0
 543 0006 C908     		lsr	r1, r1, #3
 544              	.LVL42:
 545 0008 0831     		add	r1, r1, #8
 546 000a 8900     		lsl	r1, r1, #2
 547 000c 0C58     		ldr	r4, [r1, r0]
 520:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4));
 548              		.loc 1 520 0
 549 000e 9B00     		lsl	r3, r3, #2
 550              	.LVL43:
 551              		.loc 1 521 0
 552 0010 0F25     		mov	r5, #15
 553 0012 9D40     		lsl	r5, r5, r3
 554 0014 AC43     		bic	r4, r5
 555 0016 0C50     		str	r4, [r1, r0]
 522:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 556              		.loc 1 522 0
 557 0018 0C58     		ldr	r4, [r1, r0]
 520:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4));
 558              		.loc 1 520 0
 559 001a 9A40     		lsl	r2, r2, r3
 560              	.LVL44:
 561 001c 131C     		mov	r3, r2
 562              		.loc 1 522 0
 563 001e 2343     		orr	r3, r4
 564              	.LVL45:
 523:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 565              		.loc 1 523 0
 566 0020 0B50     		str	r3, [r1, r0]
 567              		@ sp needed for prologue
 524:../Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_gpio.c **** }
 568              		.loc 1 524 0
 569 0022 30BD     		pop	{r4, r5, pc}
 570              		.cfi_endproc
 571              	.LFE45:
 573              		.text
 574              	.Letext0:
 575              		.file 2 "c:\\eclipseindigo\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 576              		.file 3 "C:\\Working\\CURRENT_PROJECT\\SKYBOX\\skysoft_lls_stm32f030c8t6\\main_code\\Source/stm32f
 577              		.file 4 "C:\\Working\\CURRENT_PROJECT\\SKYBOX\\skysoft_lls_stm32f030c8t6\\main_code\\Libraries\\ST
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_gpio.c
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:18     .text.GPIO_DeInit:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:23     .text.GPIO_DeInit:00000000 GPIO_DeInit
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:138    .text.GPIO_DeInit:00000090 $d
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:147    .text.GPIO_Init:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:152    .text.GPIO_Init:00000000 GPIO_Init
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:255    .text.GPIO_StructInit:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:260    .text.GPIO_StructInit:00000000 GPIO_StructInit
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:287    .text.GPIO_StructInit:00000014 $d
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:292    .text.GPIO_PinLockConfig:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:297    .text.GPIO_PinLockConfig:00000000 GPIO_PinLockConfig
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:343    .text.GPIO_ReadInputDataBit:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:348    .text.GPIO_ReadInputDataBit:00000000 GPIO_ReadInputDataBit
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:369    .text.GPIO_ReadInputData:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:374    .text.GPIO_ReadInputData:00000000 GPIO_ReadInputData
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:389    .text.GPIO_ReadOutputDataBit:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:394    .text.GPIO_ReadOutputDataBit:00000000 GPIO_ReadOutputDataBit
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:415    .text.GPIO_ReadOutputData:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:420    .text.GPIO_ReadOutputData:00000000 GPIO_ReadOutputData
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:435    .text.GPIO_SetBits:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:440    .text.GPIO_SetBits:00000000 GPIO_SetBits
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:454    .text.GPIO_ResetBits:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:459    .text.GPIO_ResetBits:00000000 GPIO_ResetBits
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:473    .text.GPIO_WriteBit:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:478    .text.GPIO_WriteBit:00000000 GPIO_WriteBit
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:504    .text.GPIO_Write:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:509    .text.GPIO_Write:00000000 GPIO_Write
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:523    .text.GPIO_PinAFConfig:00000000 $t
C:\Users\khanh\AppData\Local\Temp\cclyyudO.s:528    .text.GPIO_PinAFConfig:00000000 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHBPeriphResetCmd
